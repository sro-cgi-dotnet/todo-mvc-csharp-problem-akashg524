// <auto-generated />
using EFCoreDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MyWebApi.Migrations
{
    [DbContext(typeof(EFCoreDatabaseContext))]
    [Migration("20180921063627_MyDatabase")]
    partial class MyDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreDatabase.CheckList", b =>
                {
                    b.Property<int>("CheckListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NoteId");

                    b.Property<string>("list");

                    b.HasKey("CheckListId");

                    b.HasIndex("NoteId");

                    b.ToTable("checkLists");
                });

            modelBuilder.Entity("EFCoreDatabase.Label", b =>
                {
                    b.Property<string>("LabelId");

                    b.Property<int>("NoteId");

                    b.Property<string>("labelname");

                    b.HasKey("LabelId");

                    b.HasIndex("NoteId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("EFCoreDatabase.Note", b =>
                {
                    b.Property<int>("NoteId");

                    b.Property<bool>("pinned");

                    b.Property<string>("text")
                        .HasMaxLength(2000);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoteId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("EFCoreDatabase.CheckList", b =>
                {
                    b.HasOne("EFCoreDatabase.Note")
                        .WithMany("checkList")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCoreDatabase.Label", b =>
                {
                    b.HasOne("EFCoreDatabase.Note")
                        .WithMany("label")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
